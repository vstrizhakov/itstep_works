#include <iostream>
#include <Windows.h>
#include <conio.h>
#include <cstdlib>
#include <ctime>
#include <iomanip>

using namespace std;

void SetColor(int text, int background);
void GotoXY(int X, int Y);

void create_array(int *arr, int size);
void output_array(int *arr, int size);
void sort(int *arr, int size, int type);
int find(int *arr, int size, int type);
double avg(int *arr, int size);
int poz_neg(int *arr, int size, int type);

void copy_array(int *arr, int *arr2, int size) {
	for (int i = 0; i < size; i++) {
		*(arr2 + i) = *(arr + i);
	}
}

void copy_array(int *arr, int *arr2, int size, int a, int type = 1) {
	switch (type) {
	case 1:
		for (int i = 0, j = 0; i < size; i++, j++) {
			if (i == a) {
				j--;
				continue;
			}
			*(arr2 + i) = *(arr + j);
		}
		break;
	case 2:
		for (int i = 0, j = 0; j < size; i++, j++) {
			if (i == a) {
				j--;
				continue;
			}
			*(arr2 + j) = *(arr + i);
		}
		break;
	}
}

void main() {
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	SetColor(15, 0);
	srand(time(NULL));

	short en = 0, k = 1;
	do {
		if (en == 80) {
			k++;
			if (k == 3) k = 1;
		}
		if (en == 72) {
			k--;
			if (k == 0) k = 2;
		}
		if (en == 13) {
			char sel;
			switch (k) {
			case 1: {
				system("cls");
				cout << "---------------------------------------------------------------------------------------------------\n";
				cout << "Работа с одномерный массивом\n";
				cout << "---------------------------------------------------------------------------------------------------\n";
				int size;
				do {
					cout << "Введите размер(от 1 до 20): ";
					cin >> size;
				} while (size < 1 || size > 20);
				int *arr, t;
				do {
					arr = new int[size];
				} while (!arr);
				create_array(arr, size);
				short ent = 0, l = 1;
				do {
					if (ent == 80) {
						l++;
						if (l == 8) l = 1;
					}
					if (ent == 72) {
						l--;
						if (l == 0) l = 7;
					}
					if (ent == 13) {
						int *arr2, a, b;
						system("cls");
						switch (l) {
						case 1: {
							t = 0;
							sel = '1';
							do {
								system("cls");
								cout << "---------------------------------------------------------------------------------------------------\n";
								cout << "Пересоздать массив\n";
								cout << "---------------------------------------------------------------------------------------------------\n";
								cout << "Массив: ";
								output_array(arr, size);
								cout << "---------------------------------------------------------------------------------------------------\n";
								if (t > 0) {
									cout << "Хотите выполнить данную программу еще раз?\n1 - Да\tЛюбой другой символ - Выйти в главное меню\nВаш выбор: ";
									cin >> sel;
									system("cls");
									cout << "---------------------------------------------------------------------------------------------------\n";
									cout << "Пересоздать массив\n";
									cout << "---------------------------------------------------------------------------------------------------\n";
									cout << "Массив: ";
									output_array(arr, size);
									cout << "---------------------------------------------------------------------------------------------------\n";
								}
								if (sel == '1') {
									delete[] arr;
									arr = nullptr;
									do {
										cout << "Введите размер(от 1 до 20): ";
										cin >> size;
									} while (size < 1 || size > 20);
									do {
										arr = new int[size];
									} while (!arr);
									create_array(arr, size);
									t++;
								}
							} while (sel == '1');
						}
								break;
						case 2: {
							t = 1;
							sel = '1';
							do {
								system("cls");
								cout << "---------------------------------------------------------------------------------------------------\n";
								cout << "Распечатать массив\n";
								cout << "---------------------------------------------------------------------------------------------------\n";
								cout << "Массив: ";
								output_array(arr, size);
								cout << "---------------------------------------------------------------------------------------------------\n";
								if (t > 0) {
									cout << "Хотите выполнить данную программу еще раз?\n1 - Да\tЛюбой другой символ - Выйти в главное меню\nВаш выбор: ";
									cin >> sel;
									system("cls");
									cout << "---------------------------------------------------------------------------------------------------\n";
									cout << "Распечатать массив\n";
									cout << "---------------------------------------------------------------------------------------------------\n";
									cout << "Массив: ";
									output_array(arr, size);
									cout << "---------------------------------------------------------------------------------------------------\n";
								}
							} while (sel == '1');
						}
								break;
						case 3: {
							short enter = 0, d = 1;
							do {
								if (enter == 80) {
									d++;
									if (d == 6) d = 1;
								}
								if (enter == 72) {
									d--;
									if (d == 0) d = 5;
								}
								if (enter == 13) {
									switch (d) {
									case 1: {
										t = 0;
										sel = '1';
										do {
											system("cls");
											cout << "---------------------------------------------------------------------------------------------------\n";
											cout << "Добавить элемент в конец массива\n";
											cout << "---------------------------------------------------------------------------------------------------\n";
											cout << "Массив: ";
											output_array(arr, size);
											cout << "---------------------------------------------------------------------------------------------------\n";
											if (t > 0) {
												cout << "Хотите выполнить данную программу еще раз?\n1 - Да\tЛюбой другой символ - Выйти в главное меню\nВаш выбор: ";
												cin >> sel;
												system("cls");
												cout << "---------------------------------------------------------------------------------------------------\n";
												cout << "Добавить элемент в конец массива\n";
												cout << "---------------------------------------------------------------------------------------------------\n";
												cout << "Массив: ";
												output_array(arr, size);
												cout << "---------------------------------------------------------------------------------------------------\n";
											}
											if (sel == '1') {
												do {
													arr2 = new int[size];
												} while (!arr2);
												copy_array(arr, arr2, size);
												delete[] arr;
												arr = nullptr;
												size++;
												do {
													arr = new int[size];
												} while (!arr);
												copy_array(arr2, arr, size - 1);
												delete[] arr2;
												arr2 = nullptr;
												*(arr + size - 1) = rand() % 41 - 20;
												t++;
											}
										} while (sel == '1');
									}
											break;
									case 2: {
										t = 0;
										sel = '1';
										do {
											system("cls");
											cout << "---------------------------------------------------------------------------------------------------\n";
											cout << "Добавить элемент по индексу(элемент вставится после элемента с индекосм, который вы введете)\n";
											cout << "---------------------------------------------------------------------------------------------------\n";
											cout << "Массив: ";
											output_array(arr, size);
											cout << "---------------------------------------------------------------------------------------------------\n";
											if (t > 0) {
												cout << "Хотите выполнить данную программу еще раз?\n1 - Да\tЛюбой другой символ - Выйти в главное меню\nВаш выбор: ";
												cin >> sel;
												system("cls");
												cout << "---------------------------------------------------------------------------------------------------\n";
												cout << "Добавить элемент по индексу(элемент вставится после элемента с индекосм, который вы введете)\n";
												cout << "---------------------------------------------------------------------------------------------------\n";
												cout << "Массив: ";
												output_array(arr, size);
												cout << "---------------------------------------------------------------------------------------------------\n";
											}
											if (sel == '1') {
												do {
													cout << "Введите индекс элемента, после которого добавится новый элемент(индекс элемента не должен превышать количество элементов в массиве или быть меньше 0): ";
													cin >> a;
												} while (a < 0 || a > size);
												size++;
												do {
													arr2 = new int[size];
												} while (!arr2);
												copy_array(arr, arr2, size, a);
												delete[] arr;
												arr = nullptr;
												do {
													arr = new int[size];
												} while (!arr);
												copy_array(arr2, arr, size);
												delete[] arr2;
												arr2 = nullptr;
												*(arr + a) = rand() % 41 - 20;
												t++;
											}
										} while (sel == '1');
									}
											break;
									case 3: {
										t = 0;
										sel = '1';
										do {
											system("cls");
											cout << "---------------------------------------------------------------------------------------------------\n";
											cout << "Добавить блок элементов в конец массива\n";
											cout << "---------------------------------------------------------------------------------------------------\n";
											cout << "Массив: ";
											output_array(arr, size);
											cout << "---------------------------------------------------------------------------------------------------\n";
											if (t > 0) {
												cout << "Хотите выполнить данную программу еще раз?\n1 - Да\tЛюбой другой символ - Выйти в главное меню\nВаш выбор: ";
												cin >> sel;
												system("cls");
												cout << "---------------------------------------------------------------------------------------------------\n";
												cout << "Добавить блок элементов в конец массива\n";
												cout << "---------------------------------------------------------------------------------------------------\n";
												cout << "Массив: ";
												output_array(arr, size);
												cout << "---------------------------------------------------------------------------------------------------\n";
											}
											if (sel == '1') {
												cout << "Введите, сколько элементов добавить в конец массива: ";
												cin >> a;
												for (int i = 0; i < a; i++) {
													do {
														arr2 = new int[size];
													} while (!arr2);
													copy_array(arr, arr2, size);
													delete[] arr;
													arr = nullptr;
													size++;
													do {
														arr = new int[size];
													} while (!arr);
													copy_array(arr2, arr, size - 1);
													delete[] arr2;
													arr2 = nullptr;
													*(arr + size - 1) = rand() % 41 - 20;
												}
												t++;
											}
										} while (sel == '1');
									}
											break;
									case 4: {
										t = 0;
										sel = '1';
										do {
											system("cls");
											cout << "---------------------------------------------------------------------------------------------------\n";
											cout << "Добавить блок элементов по индексу(элементы вставятся после элемента с индекосм, который вы введете)\n";
											cout << "---------------------------------------------------------------------------------------------------\n";
											cout << "Массив: ";
											output_array(arr, size);
											cout << "---------------------------------------------------------------------------------------------------\n";
											if (t > 0) {
												cout << "Хотите выполнить данную программу еще раз?\n1 - Да\tЛюбой другой символ - Выйти в главное меню\nВаш выбор: ";
												cin >> sel;
												system("cls");
												cout << "---------------------------------------------------------------------------------------------------\n";
												cout << "Добавить блок элементов в конец массива\n";
												cout << "---------------------------------------------------------------------------------------------------\n";
												cout << "Массив: ";
												output_array(arr, size);
												cout << "---------------------------------------------------------------------------------------------------\n";
											}
											if (sel == '1') {
												do {
													cout << "Введите индекс элемента, после которого добавится новый элемент(индекс элемента не должен превыть количество элементов в массиве или быть меньше 0): ";
													cin >> a;
												} while (a < 0 || a > size);
												cout << "Введите сколько элементов добавить: ";
												cin >> b;
												for (int i = 0; i < b; i++, a++) {
													size++;
													do {
														arr2 = new int[size];
													} while (!arr2);
													copy_array(arr, arr2, size, a);
													delete[] arr;
													arr = nullptr;
													do {
														arr = new int[size];
													} while (!arr);
													copy_array(arr2, arr, size);
													delete[] arr2;
													arr2 = nullptr;
													*(arr + a) = rand() % 41 - 20;
												}
												t++;
											}
										} while (sel == '1');
									}
											break;
									default:
										d = 6;
										break;
									}
								}
								if (d == 6) break;
								system("cls");
								cout << "---------------------------------------------------------------------------------------------------\n";
								cout << "Добавить...\n";
								cout << "---------------------------------------------------------------------------------------------------\n";
								cout << "Массив: ";
								output_array(arr, size);
								cout << "---------------------------------------------------------------------------------------------------\n";
								if (d == 1) SetColor(10, 0);
								cout << "Добавить элемент в конец массива\n";
								SetColor(15, 0);
								cout << "---------------------------------------------------------------------------------------------------\n";
								if (d == 2) SetColor(10, 0);
								cout << "Добавить элемент по индексу(элемент добавится после веденного элемента)\n";
								SetColor(15, 0);
								cout << "---------------------------------------------------------------------------------------------------\n";
								if (d == 3) SetColor(10, 0);
								cout << "Добавить блок элементов в конец\n";
								SetColor(15, 0);
								cout << "---------------------------------------------------------------------------------------------------\n";
								if (d == 4) SetColor(10, 0);
								cout << "Добавить блок элементов по индексу(элементы добавятся после веденного элемента)\n";
								SetColor(15, 0);
								cout << "---------------------------------------------------------------------------------------------------\n";
								if (d == 5) SetColor(10, 0);
								cout << "Выход в верхнее меню\n";
								SetColor(15, 0);
								cout << "---------------------------------------------------------------------------------------------------\n";
							} while (enter = getch());
						}
								break;
						case 4: {
							short enter = 0, d = 1;
							do {
								if (enter == 80) {
									d++;
									if (d == 6) d = 1;
								}
								if (enter == 72) {
									d--;
									if (d == 0) d = 5;
								}
								if (enter == 13) {
									switch (d) {
									case 1: {
										t = 0;
										sel = '1';
										do {
											system("cls");
											cout << "---------------------------------------------------------------------------------------------------\n";
											cout << "Удалить последний элемент\n";
											cout << "---------------------------------------------------------------------------------------------------\n";
											cout << "Массив: ";
											output_array(arr, size);
											cout << "---------------------------------------------------------------------------------------------------\n";
											if (t > 0) {
												if (size > 0) {
													cout << "Хотите выполнить данную программу еще раз?\n1 - Да\tЛюбой другой символ - Выйти в главное меню\nВаш выбор: ";
													cin >> sel;
												}
												else {
													SetColor(12, 0);
													cout << "Операция невозможна, так как количество элементов массива равно 0!" << endl;
													SetColor(15, 0);
													cout << "Любой символ будет воспринят как выход в верхнее меню: ";
													cin >> sel;
													break;
												}
												system("cls");
												cout << "---------------------------------------------------------------------------------------------------\n";
												cout << "Удалить последний элемент\n";
												cout << "---------------------------------------------------------------------------------------------------\n";
												cout << "Массив: ";
												output_array(arr, size);
												cout << "---------------------------------------------------------------------------------------------------\n";
											}
											if (sel == '1') {
												size--;
												if (size > 0) {
													do {
														arr2 = new int[size];
													} while (!arr2);
													copy_array(arr, arr2, size);
													delete[] arr;
													arr = nullptr;
													do {
														arr = new int[size];
													} while (!arr);
													copy_array(arr2, arr, size);
													delete[] arr2;
													arr2 = nullptr;
													t++;
												}
												else {
													t++;
												}
											}
										} while (sel == '1');
									}
											break;
									case 2: {
										t = 0;
										sel = '1';
										do {
											system("cls");
											cout << "---------------------------------------------------------------------------------------------------\n";
											cout << "Удалить элемент по индексу(элемент удалится после веденного элемента)\n";
											cout << "---------------------------------------------------------------------------------------------------\n";
											cout << "Массив: ";
											output_array(arr, size);
											cout << "---------------------------------------------------------------------------------------------------\n";
											if (t > 0) {
												if (size > 0) {
													cout << "Хотите выполнить данную программу еще раз?\n1 - Да\tЛюбой другой символ - Выйти в главное меню\nВаш выбор: ";
													cin >> sel;
												}
												else {
													SetColor(12, 0);
													cout << "Операция невозможна, так как количество элементов массива равно 0!" << endl;
													SetColor(15, 0);
													cout << "Любой символ будет воспринят как выход в верхнее меню: ";
													cin >> sel;
													break;
												}
												system("cls");
												cout << "---------------------------------------------------------------------------------------------------\n";
												cout << "Удалить элемент по индексу(элемент удалится после веденного элемента)\n";
												cout << "---------------------------------------------------------------------------------------------------\n";
												cout << "Массив: ";
												output_array(arr, size);
												cout << "---------------------------------------------------------------------------------------------------\n";
											}
											if (sel == '1') {
												if (size > 0) {
													do {
														cout << "Введите индекс элемента, после которого удалится элемент(индекс элемента не должен быть больше или равен индексу последнего элемента массива или быть меньше 0): ";
														cin >> a;
													} while (a < 0 || a > size - 1);
													size--;
													do {
														arr2 = new int[size];
													} while (!arr2);
													copy_array(arr, arr2, size, a, 2);
													delete[] arr;
													arr = nullptr;
													do {
														arr = new int[size];
													} while (!arr);
													copy_array(arr2, arr, size);
													delete[] arr2;
													arr2 = nullptr;
													t++;
												}
												else {
													t++;
												}
											}
										} while (sel == '1');
									}
											break;
									case 3: {
										t = 0;
										sel = '1';
										do {
											system("cls");
											cout << "---------------------------------------------------------------------------------------------------\n";
											cout << "Удалить блок элементов с конца\n";
											cout << "---------------------------------------------------------------------------------------------------\n";
											cout << "Массив: ";
											output_array(arr, size);
											cout << "---------------------------------------------------------------------------------------------------\n";
											if (t > 0) {
												if (size > 0) {
													cout << "Хотите выполнить данную программу еще раз?\n1 - Да\tЛюбой другой символ - Выйти в главное меню\nВаш выбор: ";
													cin >> sel;
												}
												else {
													SetColor(12, 0);
													cout << "Операция невозможна, так как количество элементов массива равно 0!" << endl;
													SetColor(15, 0);
													cout << "Любой символ будет воспринят как выход в верхнее меню: ";
													cin >> sel;
													break;
												}
												system("cls");
												cout << "---------------------------------------------------------------------------------------------------\n";
												cout << "Удалить блок элементов с конца\n";
												cout << "---------------------------------------------------------------------------------------------------\n";
												cout << "Массив: ";
												output_array(arr, size);
												cout << "---------------------------------------------------------------------------------------------------\n";
											}
											if (sel == '1') {
												if (size > 0) {
													do {
														cout << "Введите, сколько элементов удалить с конца массива(количество элементов, которые нужно удалить, не должно превышать количество элементов всего массива): ";
														cin >> a;
													} while (a > size);
													for (int i = 0; i < a; i++) {
														size--;
														do {
															arr2 = new int[size];
														} while (!arr2);
														copy_array(arr, arr2, size);
														delete[] arr;
														arr = nullptr;
														do {
															arr = new int[size];
														} while (!arr);
														copy_array(arr2, arr, size);
														delete[] arr2;
														arr2 = nullptr;
													}
													t++;
												}
												else {
													t++;
												}
											}
										} while (sel == '1');
									}
											break;
									case 4: {
										t = 0;
										sel = '1';
										do {
											system("cls");
											cout << "---------------------------------------------------------------------------------------------------\n";
											cout << "Удалить блок элементов по индексу(элементы удалятся после веденного элемента)\n";
											cout << "---------------------------------------------------------------------------------------------------\n";
											cout << "Массив: ";
											output_array(arr, size);
											cout << "---------------------------------------------------------------------------------------------------\n";
											if (t > 0) {
												if (size > 0) {
													cout << "Хотите выполнить данную программу еще раз?\n1 - Да\tЛюбой другой символ - Выйти в главное меню\nВаш выбор: ";
													cin >> sel;
												}
												else {
													SetColor(12, 0);
													cout << "Операция невозможна, так как количество элементов массива равно 0!" << endl;
													SetColor(15, 0);
													cout << "Любой символ будет воспринят как выход в верхнее меню: ";
													cin >> sel;
													break;
												}
												system("cls");
												cout << "---------------------------------------------------------------------------------------------------\n";
												cout << "Удалить блок элементов с конца\n";
												cout << "---------------------------------------------------------------------------------------------------\n";
												cout << "Массив: ";
												output_array(arr, size);
												cout << "---------------------------------------------------------------------------------------------------\n";
											}
											if (sel == '1') {
												do {
													cout << "Введите индекс элемента, после которого удалятся элементы(индекс элемента не должен превышать количество элементов в массиве или быть меньше 0): ";
													cin >> a;
												} while (a < 0 || a > size - 1);
												do {
													cout << "Введите сколько элементов удалить: ";
													cin >> b;
												} while (b > size - a);
												for (int i = 0; i < b; i++) {
													size--;
													do {
														arr2 = new int[size];
													} while (!arr2);
													copy_array(arr, arr2, size, a, 2);
													delete[] arr;
													arr = nullptr;
													do {
														arr = new int[size];
													} while (!arr);
													copy_array(arr2, arr, size);
													delete[] arr2;
													arr2 = nullptr;
												}
												t++;
											}
										} while (sel == '1');
									}
											break;
									default:
										d = 6;
										break;
									}
								}
								if (d == 6) break;
								system("cls");
								cout << "---------------------------------------------------------------------------------------------------\n";
								cout << "Удалить...\n";
								cout << "---------------------------------------------------------------------------------------------------\n";
								cout << "Массив: ";
								output_array(arr, size);
								cout << "---------------------------------------------------------------------------------------------------\n";
								if (d == 1) SetColor(10, 0);
								cout << "Удалить последний элемент\n";
								SetColor(15, 0);
								cout << "---------------------------------------------------------------------------------------------------\n";
								if (d == 2) SetColor(10, 0);
								cout << "Удалить элемент по индексу(элемент удалится после веденного элемента)\n";
								SetColor(15, 0);
								cout << "---------------------------------------------------------------------------------------------------\n";
								if (d == 3) SetColor(10, 0);
								cout << "Удалить блок элементов с конца\n";
								SetColor(15, 0);
								cout << "---------------------------------------------------------------------------------------------------\n";
								if (d == 4) SetColor(10, 0);
								cout << "Удалить блок элементов по индексу(элементы добавятся после веденного элемента)\n";
								SetColor(15, 0);
								cout << "---------------------------------------------------------------------------------------------------\n";
								if (d == 5) SetColor(10, 0);
								cout << "Выход в верхнее меню\n";
								SetColor(15, 0);
								cout << "---------------------------------------------------------------------------------------------------\n";
							} while (enter = getch());

						}
								break;
						case 5: {
							short enter = 0, d = 1;
							do {
								if (enter == 80) {
									d++;
									if (d == 4) d = 1;
								}
								if (enter == 72) {
									d--;
									if (d == 0) d = 3;
								}
								if (enter == 13) {
									t = 0;
									sel = '1';
									do {
										system("cls");
										cout << "---------------------------------------------------------------------------------------------------\n";
										cout << "Сортировать массив по возрастанию\n";
										cout << "---------------------------------------------------------------------------------------------------\n";
										cout << "Массив: ";
										output_array(arr, size);
										cout << "---------------------------------------------------------------------------------------------------\n";
										if (d == 1 || d == 2) {
											if (t > 0) {
												SetColor(12, 0);
												cout << "Операция невозможна, так как массив уже отсортирован!" << endl;
												SetColor(15, 0);
												cout << "Любой символ будет воспринят как выход в верхнее меню: ";
												cin >> sel;
												break;
											}
											if (sel == '1') {
												(d == 1) ? sort(arr, size, 1) : sort(arr, size, 2);
												t++;
											}
										}
										else {
											d = 6;
											sel = 0;
										}
									} while (sel == '1');
								}
								if (d == 6) break;
								system("cls");
								cout << "---------------------------------------------------------------------------------------------------\n";
								cout << "Сортировать...\n";
								cout << "---------------------------------------------------------------------------------------------------\n";
								cout << "Массив: ";
								output_array(arr, size);
								cout << "---------------------------------------------------------------------------------------------------\n";
								if (d == 1) SetColor(10, 0);
								cout << "По возрастанию\n";
								SetColor(15, 0);
								cout << "---------------------------------------------------------------------------------------------------\n";
								if (d == 2) SetColor(10, 0);
								cout << "По убыванию\n";
								SetColor(15, 0);
								cout << "---------------------------------------------------------------------------------------------------\n";
								if (d == 3) SetColor(10, 0);
								cout << "Выход в верхнее меню\n";
								SetColor(15, 0);
								cout << "---------------------------------------------------------------------------------------------------\n";
							} while (enter = getch());

						}
								break;
						case 6: {
							short enter = 0, d = 1;
							do {
								system("cls");
								cout << "---------------------------------------------------------------------------------------------------\n";
								cout << "Поиск...\n";
								cout << "---------------------------------------------------------------------------------------------------\n";
								cout << "Массив: ";
								output_array(arr, size);
								cout << "---------------------------------------------------------------------------------------------------\n";
								int poz = find(arr, size, 1);
								cout << "Максимальный элемент: " << *(arr + poz) << "(позиция " << poz + 1 << ")" << endl;
								cout << "---------------------------------------------------------------------------------------------------\n";
								poz = find(arr, size, 2);
								cout << "Минимальный элемент: " << *(arr + poz) << "(позиция " << poz + 1 << ")" << endl;
								cout << "---------------------------------------------------------------------------------------------------\n";
								cout << "Среднее значение всех элементов массива: " << avg(arr, size) << endl;
								cout << "---------------------------------------------------------------------------------------------------\n";
								poz = poz_neg(arr, size, 1);
								cout << "Количество позитивных элементов: " << poz << endl;
								cout << "---------------------------------------------------------------------------------------------------\n";
								poz = poz_neg(arr, size, 2);
								cout << "Количество негативных элементов: " << poz << endl;
								cout << "---------------------------------------------------------------------------------------------------\n";
								poz = poz_neg(arr, size, 3);
								cout << "Количество нейтральных элементов: " << poz << endl;
								cout << "---------------------------------------------------------------------------------------------------\n";
								cout << "Для выхода в верхнее меню введите любой символ: ";
								cin >> sel;
								break;
							} while (enter = getch());
						}
								break;
						default:
							l = 8;
							break;
						}
					}
					if (l == 8) break;
					system("cls");
					cout << "---------------------------------------------------------------------------------------------------\n";
					cout << "Работа с одномерный массивом\n";
					cout << "---------------------------------------------------------------------------------------------------\n";
					cout << "Массив: ";
					output_array(arr, size);
					cout << "---------------------------------------------------------------------------------------------------\n";
					if (l == 1) SetColor(10, 0);
					cout << "Пересоздать массив\n";
					SetColor(15, 0);
					cout << "---------------------------------------------------------------------------------------------------\n";
					if (l == 2) SetColor(10, 0);
					cout << "Распечатать массив\n";
					SetColor(15, 0);
					cout << "---------------------------------------------------------------------------------------------------\n";
					if (l == 3) SetColor(10, 0);
					cout << "Добавить...\n";
					SetColor(15, 0);
					cout << "---------------------------------------------------------------------------------------------------\n";
					if (l == 4) SetColor(10, 0);
					cout << "Удалить...\n";
					SetColor(15, 0);
					cout << "---------------------------------------------------------------------------------------------------\n";
					if (l == 5) SetColor(10, 0);
					cout << "Сортировать...\n";
					SetColor(15, 0);
					cout << "---------------------------------------------------------------------------------------------------\n";
					if (l == 6) SetColor(10, 0);
					cout << "Поиск...\n";
					SetColor(15, 0);
					cout << "---------------------------------------------------------------------------------------------------\n";
					if (l == 7) SetColor(10, 0);
					cout << "Выход в верхнее меню\n";
					SetColor(15, 0);
					cout << "---------------------------------------------------------------------------------------------------\n";
				} while (ent = getch());
			}
					break;
			default:
				exit(0);
				break;
			}
		}
		system("cls");
		cout << "---------------------------------------------------------------------------------------------------\n";
		if (k == 1) SetColor(10, 0);
		cout << "Создать массив\n";
		SetColor(15, 0);
		cout << "---------------------------------------------------------------------------------------------------\n";
		SetColor(12, 0);
		cout << "ВНИМАНИЕ!";
		SetColor(15, 0);
		cout << " Программа корректно отображается при разрешении консоли 100x30!" << endl;
		cout << "---------------------------------------------------------------------------------------------------\n";
		if (k == 2) SetColor(10, 0);
		cout << "Выход из программы\n";
		SetColor(15, 0);
		cout << "---------------------------------------------------------------------------------------------------\n";
	} while (en = getch());
}

enum ConsoleColor {
	Black, Blue, Green, Cyan, Red, Magenta, Brown, LightGray, DarkGray,
	LightBlue, LightGreen, LightCyan, LightRed, LightMagenta, Yellow, White
};

void SetColor(int text, int background) {
	HANDLE hStdOut = GetStdHandle(STD_OUTPUT_HANDLE);
	SetConsoleTextAttribute(hStdOut, (WORD)((background << 4) | text));
}

void GotoXY(int X, int Y) {
	HANDLE hConsole;
	HANDLE hStdOut = GetStdHandle(STD_OUTPUT_HANDLE);
	COORD coord = { X, Y };
	SetConsoleCursorPosition(hStdOut, coord);
}

void create_array(int *arr, int size) {
	for (int i = 0; i < size; i++) {
		*(arr + i) = rand() % 41 - 20;
	}
}

void output_array(int *arr, int size) {
	for (int i = 0; i < size; i++) {
		cout << *(arr + i) << " ";
	}
	if (size <= 0) cout << "элементы отсутствуют";
	cout << endl;
}

void sort(int *arr, int size, int type) {
	int temp, z;
	switch (type) {
	case 1:
		for (int j = 0; j < size; j++) {
			z = 0;
			for (int i = 0; i < size - 1; i++) {
				if (*(arr + i) > *(arr + 1 + i)) {
					temp = *(arr + 1 + i);
					*(arr + 1 + i) = *(arr + i);
					*(arr + i) = temp;
					z++;
				}
			}
		}
		break;
	case 2:
		for (int j = 0; j < size; j++) {
			z = 0;
			for (int i = 0; i < size - 1; i++) {
				if (*(arr + i) < *(arr + 1 + i)) {
					temp = *(arr + 1 + i);
					*(arr + 1 + i) = *(arr + i);
					*(arr + i) = temp;
					z++;
				}
			}
		}
		break;
	}
}

int find(int *arr, int size, int type) {
	int sum = 0;
	switch (type) {
	case 1: {
		for (int i = 0; i < size; i++) {
			if (*(arr + i) > *(arr + sum)) {
				sum = i;
			}
		}
	}
			break;
	case 2: {
		for (int i = 0; i < size; i++) {
			if (*(arr + i) < *(arr + sum)) {
				sum = i;
			}
		}
	}
			break;
	}
	return sum;
}

double avg(int *arr, int size) {
	double sum = 0;
	for (int i = 0; i < size; i++) {
		sum += *(arr + i);
	}
	return sum / size;
}

int poz_neg(int *arr, int size, int type) {
	int sum = 0;
	for (int i = 0; i < size; i++) {
		if (type == 1) {
			if (*(arr + i) > 0) sum++;
		}
		else if (type == 3) {
			if (*(arr + i) == 0) sum++;
		}
		else {
			if (*(arr + i) < 0) sum++;
		}
	}
	return sum;
}